/**
 * This class is generated by jOOQ
 */
package de.blogblog.jooq;


import de.blogblog.jooq.tables.BlPosts;
import de.blogblog.jooq.tables.BlUsers;
import de.blogblog.jooq.tables.records.BlPostsRecord;
import de.blogblog.jooq.tables.records.BlUsersRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>blogblog</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<BlPostsRecord, Integer> IDENTITY_BL_POSTS = Identities0.IDENTITY_BL_POSTS;
    public static final Identity<BlUsersRecord, Integer> IDENTITY_BL_USERS = Identities0.IDENTITY_BL_USERS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BlPostsRecord> BL_POSTS_PKEY = UniqueKeys0.BL_POSTS_PKEY;
    public static final UniqueKey<BlUsersRecord> BL_USERS_PKEY = UniqueKeys0.BL_USERS_PKEY;
    public static final UniqueKey<BlUsersRecord> BL_USERS_USERNAME_KEY = UniqueKeys0.BL_USERS_USERNAME_KEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BlPostsRecord, BlUsersRecord> BL_POSTS__BL_POSTS_AUTHOR_FKEY = ForeignKeys0.BL_POSTS__BL_POSTS_AUTHOR_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<BlPostsRecord, Integer> IDENTITY_BL_POSTS = createIdentity(BlPosts.BL_POSTS, BlPosts.BL_POSTS.ID);
        public static Identity<BlUsersRecord, Integer> IDENTITY_BL_USERS = createIdentity(BlUsers.BL_USERS, BlUsers.BL_USERS.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<BlPostsRecord> BL_POSTS_PKEY = createUniqueKey(BlPosts.BL_POSTS, "bl_posts_pkey", BlPosts.BL_POSTS.ID);
        public static final UniqueKey<BlUsersRecord> BL_USERS_PKEY = createUniqueKey(BlUsers.BL_USERS, "bl_users_pkey", BlUsers.BL_USERS.ID);
        public static final UniqueKey<BlUsersRecord> BL_USERS_USERNAME_KEY = createUniqueKey(BlUsers.BL_USERS, "bl_users_username_key", BlUsers.BL_USERS.USERNAME);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<BlPostsRecord, BlUsersRecord> BL_POSTS__BL_POSTS_AUTHOR_FKEY = createForeignKey(de.blogblog.jooq.Keys.BL_USERS_PKEY, BlPosts.BL_POSTS, "bl_posts__bl_posts_author_fkey", BlPosts.BL_POSTS.AUTHOR);
    }
}
